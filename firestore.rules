rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get user document
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && getUserData().role == 'Admin';
    }
    
    // Helper function to check if user is staff
    function isStaff() {
      return request.auth != null && getUserData().role == 'Staff';
    }
    
    // Users collection - users can only read/write their own data, admins can read all
    match /users/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && 
        (request.auth.uid == userId || isAdmin());
    }
    
    // Items collection - staff can read, only admins can write
    match /items/{itemId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Orders collection - users can read their own orders, admins can read all
    // Users can create orders, only admins can update/delete
    match /orders/{orderId} {
      allow read: if request.auth != null && 
        (resource.data.placedBy == request.auth.uid || isAdmin());
      allow create: if request.auth != null && isStaff();
      allow update, delete: if isAdmin();
    }
    
    // Settings collection - only admins can read/write
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }
    
    // Mail collection - for Firebase Email Extension
    match /mail/{mailId} {
      allow read, write: if request.auth != null;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 